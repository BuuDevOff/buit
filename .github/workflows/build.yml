name: Build Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create package directory
      shell: bash
      run: mkdir -p buit-${{ github.ref_name }}-${{ matrix.name }}
    
    - name: Copy binary (Unix)
      if: matrix.os != 'windows-latest'
      run: cp target/${{ matrix.target }}/release/buit buit-${{ github.ref_name }}-${{ matrix.name }}/
    
    - name: Copy binary (Windows)
      if: matrix.os == 'windows-latest'
      run: cp target/${{ matrix.target }}/release/buit.exe buit-${{ github.ref_name }}-${{ matrix.name }}/
    
    - name: Create tar.gz
      shell: bash
      run: tar -czf buit-${{ github.ref_name }}-${{ matrix.name }}.tar.gz buit-${{ github.ref_name }}-${{ matrix.name }}/
    
    - name: Create zip (Windows)
      if: matrix.os == 'windows-latest'
      run: powershell "Compress-Archive -Path buit-${{ github.ref_name }}-${{ matrix.name }} -DestinationPath buit-${{ github.ref_name }}-${{ matrix.name }}.zip"
    
    - name: Create zip (Unix)
      if: matrix.os != 'windows-latest'
      run: zip -r buit-${{ github.ref_name }}-${{ matrix.name }}.zip buit-${{ github.ref_name }}-${{ matrix.name }}/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: buit-${{ github.ref_name }}-${{ matrix.name }}
        path: |
          buit-${{ github.ref_name }}-${{ matrix.name }}.tar.gz
          buit-${{ github.ref_name }}-${{ matrix.name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "BUIT ${{ github.ref_name }} - Multi-Platform Release"
        body: |
          ## ðŸš€ Multi-Platform Release
          
          ### What's Changed
          - **Enhanced performance** across all OSINT modules
          - **Improved stability** and error handling
          - **Security updates** with latest dependencies
          - **Cross-platform compatibility** improvements
          
          ### ðŸ“¦ Downloads
          - **macOS ARM64**: `buit-${{ github.ref_name }}-macos-arm64.tar.gz` / `.zip`
          - **macOS x64**: `buit-${{ github.ref_name }}-macos-x64.tar.gz` / `.zip`
          - **Linux x64**: `buit-${{ github.ref_name }}-linux-x64.tar.gz` / `.zip`
          - **Windows x64**: `buit-${{ github.ref_name }}-windows-x64.tar.gz` / `.zip`
          
          ### ðŸš€ Installation
          Download the appropriate binary for your system and run it. The tool includes auto-setup functionality.
          
          ### ðŸ”§ Requirements
          - **macOS**: 10.15+ (Apple Silicon or Intel)
          - **Linux**: glibc 2.17+ (most modern distributions)
          - **Windows**: Windows 10/11 x64
          
          ### ðŸŒŸ Features
          20+ OSINT modules for reconnaissance and intelligence gathering:
          - Username search across platforms
          - Email analysis and verification
          - Domain investigation tools
          - Port scanning capabilities
          - IP geolocation and analysis
          - And much more...
          
          Built with Rust for maximum performance and security.
        files: |
          */buit-*.tar.gz
          */buit-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}