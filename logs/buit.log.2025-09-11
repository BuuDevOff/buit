2025-09-11T18:39:09.694094Z DEBUG reqwest::connect: starting new connection: https://api.github.com/
2025-09-11T18:39:09.952574Z DEBUG hyper_util::client::legacy::connect::http: connecting to 140.82.121.6:443
2025-09-11T18:39:09.981951Z DEBUG hyper_util::client::legacy::connect::http: connected to 140.82.121.6:443
2025-09-11T18:39:10.017609Z DEBUG h2::client: binding client connection
2025-09-11T18:39:10.017661Z DEBUG h2::client: client connection bound
2025-09-11T18:39:10.017735Z DEBUG h2::codec::framed_write: send frame=Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:39:10.018297Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 5177345 }
2025-09-11T18:39:10.018368Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-09-11T18:39:10.047155Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x0), max_concurrent_streams: 100, initial_window_size: 67108864, max_frame_size: 68608, enable_connect_protocol: 1 }
2025-09-11T18:39:10.047196Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:39:10.047239Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:39:10.047258Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:39:10.202432Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-09-11T18:39:10.204921Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:39:10.234811Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:39:10.234850Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:39:10.234873Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-09-11T18:39:10.234956Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-09-11T18:39:10.234996Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::connection: Connection::poll; connection error error=GoAway(b"", NO_ERROR, Library)
2025-09-11T18:44:27.636718Z DEBUG reqwest::connect: starting new connection: https://api.github.com/
2025-09-11T18:44:27.906041Z DEBUG hyper_util::client::legacy::connect::http: connecting to 140.82.121.6:443
2025-09-11T18:44:27.935977Z DEBUG hyper_util::client::legacy::connect::http: connected to 140.82.121.6:443
2025-09-11T18:44:27.971778Z DEBUG h2::client: binding client connection
2025-09-11T18:44:27.971829Z DEBUG h2::client: client connection bound
2025-09-11T18:44:27.971908Z DEBUG h2::codec::framed_write: send frame=Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:44:27.972465Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 5177345 }
2025-09-11T18:44:27.972546Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-09-11T18:44:28.009339Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x0), max_concurrent_streams: 100, initial_window_size: 67108864, max_frame_size: 68608, enable_connect_protocol: 1 }
2025-09-11T18:44:28.009387Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:44:28.016393Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:44:28.016426Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:44:28.157313Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-09-11T18:44:28.158049Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:44:28.183266Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:44:28.183306Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:44:28.183330Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-09-11T18:44:28.183421Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-09-11T18:44:28.183467Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::connection: Connection::poll; connection error error=GoAway(b"", NO_ERROR, Library)
2025-09-11T18:52:32.047422Z DEBUG reqwest::connect: starting new connection: https://api.github.com/
2025-09-11T18:52:32.354365Z DEBUG hyper_util::client::legacy::connect::http: connecting to 140.82.121.5:443
2025-09-11T18:52:32.393041Z DEBUG hyper_util::client::legacy::connect::http: connected to 140.82.121.5:443
2025-09-11T18:52:32.429556Z DEBUG h2::client: binding client connection
2025-09-11T18:52:32.429612Z DEBUG h2::client: client connection bound
2025-09-11T18:52:32.429712Z DEBUG h2::codec::framed_write: send frame=Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:52:32.430344Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 5177345 }
2025-09-11T18:52:32.430454Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-09-11T18:52:32.463590Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x0), max_concurrent_streams: 100, initial_window_size: 67108864, max_frame_size: 68608, enable_connect_protocol: 1 }
2025-09-11T18:52:32.463635Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:52:32.463677Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:52:32.463702Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:52:32.635257Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-09-11T18:52:32.658454Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:52:32.658546Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:52:32.658901Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:52:32.658938Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-09-11T18:52:32.659024Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-09-11T18:52:32.659065Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::connection: Connection::poll; connection error error=GoAway(b"", NO_ERROR, Library)
2025-09-11T18:53:35.011641Z DEBUG reqwest::connect: starting new connection: https://api.github.com/
2025-09-11T18:53:35.281151Z DEBUG hyper_util::client::legacy::connect::http: connecting to 140.82.121.6:443
2025-09-11T18:53:35.330470Z DEBUG hyper_util::client::legacy::connect::http: connected to 140.82.121.6:443
2025-09-11T18:53:35.362533Z DEBUG h2::client: binding client connection
2025-09-11T18:53:35.362590Z DEBUG h2::client: client connection bound
2025-09-11T18:53:35.362652Z DEBUG h2::codec::framed_write: send frame=Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:53:35.363186Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 5177345 }
2025-09-11T18:53:35.363265Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-09-11T18:53:35.394934Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x0), max_concurrent_streams: 100, initial_window_size: 67108864, max_frame_size: 68608, enable_connect_protocol: 1 }
2025-09-11T18:53:35.394968Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:53:35.395029Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-09-11T18:53:35.395081Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), enable_push: 0, initial_window_size: 2097152, max_frame_size: 16384, max_header_list_size: 16384 }
2025-09-11T18:53:35.531887Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-09-11T18:53:35.556331Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:53:35.557085Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1) }
2025-09-11T18:53:35.557127Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-09-11T18:53:35.557215Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::codec::framed_write: send frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-09-11T18:53:35.557244Z DEBUG Connection{[3mpeer[0m[2m=[0mClient}: h2::proto::connection: Connection::poll; connection error error=GoAway(b"", NO_ERROR, Library)
